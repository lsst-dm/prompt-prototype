---
name: "Build base"
on:
  push:
    paths:
      - '.github/workflows/build-base.yml'
      - 'Dockerfile.main'
    branches:
      - main
  pull_request:
    paths:
      - '.github/workflows/build-base.yml'
      - 'Dockerfile.main'
  workflow_dispatch:
    inputs:
      stackTag:
        description: 'Science Pipelines tag (default: d_latest)'
        required: true
        default: 'd_latest'
        type: string
      makeLatest:
        description: 'Push container with "latest" tag'
        required: false
        type: boolean


permissions:
  packages: write

jobs:
  update-base-image:
    name: Update base image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: prompt-proto-base
      STACK_TAG: ${{ inputs.stackTag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build image
        # Context-free build
        run: |
          if [[ -n "$STACK_TAG" ]]; then
            if [[ "$STACK_TAG" == "*_latest" ]]; then
              LSST_DOCKER_TAG="$STACK_TAG"
            else
              LSST_DOCKER_TAG="7-stack-lsst_distrib-$STACK_TAG"
            fi
          else
            STACK_TAG="d_latest"
            LSST_DOCKER_TAG="d_latest"
          fi
          docker build - \
            --build-arg "STACK_TAG=$LSST_DOCKER_TAG" \
            --tag $IMAGE_NAME \
            --label "runnumber=${GITHUB_RUN_ID}" \
            --label "stacktag=$STACK_TAG" \
            < Dockerfile.main
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Google Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: _json_key_base64
          password: ${{ secrets.GAR_JSON_B64 }}
      - name: Push image to registries
        run: |
          [[ -n "$STACK_TAG" ]] || STACK_TAG="d_latest"
          MAKE_LATEST="${{ inputs.makeLatest }}"
          [[ -n "$MAKE_LATEST" ]] || MAKE_LATEST="true"
          BRANCH=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [ "$BRANCH" == "merge" ] && BRANCH=$(echo "${{ github.head_ref }}" | sed -e 's,.*/\(.*\),\1,')

          for IMAGE_ID in "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME" "us-central1-docker.pkg.dev/prompt-proto/prompt/$IMAGE_NAME"; do
            if [ "$BRANCH" == "main" ]; then
              VERSION="$STACK_TAG"
            else
              VERSION="${BRANCH}-$STACK_TAG"
            fi
            echo IMAGE_ID=$IMAGE_ID
            echo VERSION=$VERSION
            docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION
            if [ "$MAKE_LATEST" == "true" ]; then
              if [ "$BRANCH" == "main" ]; then
                VERSION="latest"
              else
                VERSION="${BRANCH}-latest"
              fi
              echo VERSION=$VERSION
              docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
              docker push $IMAGE_ID:$VERSION
            fi
          done
